// DATABASE TO STORE ALL ORDERS INFO FROM SHOPIFY
var mongoose=require("mongoose");
mongoose.connect("mongodb://sandman:sandman2018@ds243501.mlab.com:43501/proto_test");
var ordersdbSchema=new mongoose.Schema({
        id: Number,
        email: String,
        closed_at: String,
        created_at: String,
        updated_at: String,
        number: String,
        note: String,
        token: String,
        gateway: String,
        test: Boolean,
        total_price: String,
        subtotal_price: String,
        total_weight: Number,
        total_tax: String,
        taxes_included: Boolean,
        currency: String,
        financial_status: String,
        confirmed: Boolean,
        total_discounts: String,
        total_line_items_price: String,
        cart_token: String,
        buyer_accepts_marketing: Boolean,
        name: String,
        referring_site: String,
        landing_site: String,
        cancelled_at: String,
        cancel_reason: String,
        total_price_usd: String,
        checkout_token: String,
        reference: String,
        user_id: String,
        location_id: String,
        source_identifier: String,
        source_url: String,
        processed_at: String,
        device_id: String,
        phone: String,
        customer_locale: String,
        app_id: Number,
        browser_ip: String,
        landing_site_ref: String,
        order_number: Number,
        discount_applications: [ String],
        discount_codes: [ String],
        note_attributes: [String ],
        payment_gateway_names: [
            String
        ],
        processing_method: String,
        checkout_id: Number,
        source_name: String,
        fulfillment_status: String,
        tax_lines: [{title: String, price: String, rate: Number} ],
        tags: String,
        contact_email: String,
        order_status_url: String,
        line_items: [
        {
            id: Number,
            variant_id: Number,
            title: String,
            quantity: Number,
            price: String,
            sku: String,
            variant_title: String,
            vendor: String,
            fulfillment_service: String,
            product_id: Number,
            requires_shipping: Boolean,
            taxable: Boolean,
            gift_card: Boolean,
            name: String,
            variant_inventory_management: String,
            properties: [ String],
            product_exists: Boolean,
            fulfillable_quantity: Number,
            grams: Number,
            total_discount: String,
            fulfillment_status: String,
            discount_allocations: [String ],
            tax_lines:  [{title: String, price: String, rate: Number} ],
            origin_location: {
                id: Number,
                country_code: String,
                province_code: String,
                name: String,
                address1: String,
                address2: String,
                city: String,
                zip: String
            }
        }
        ],
        shipping_lines: [
        {
            id: Number,
            title: String,
            price: String,
            code: String,
            source: String,
            phone: String,
            requested_fulfillment_service_id: String,
            delivery_category: String,
            carrier_identifier: String,
            discounted_price: String,
            discount_allocations: [ String],
            tax_lines: [{title: String, price: String, rate: Number} ],
        }
        ],
        billing_address: {
            first_name: String,
            address1: String,
            phone:String,
            city: String,
            zip: String,
            province: String,
            country: String,
            last_name: String,
            address2: String,
            company: String,
            latitude: Number,
            longitude: Number,
            name: String,
            country_code: String,
            province_code: String
        },
        shipping_address: {
            first_name: String,
            address1: String,
            phone: String,
            city: String,
            zip: String,
            province:String,
            country: String,
            last_name: String,
            address2: String,
            company: String,
            latitude: Number,
            longitude: Number,
            name: String,
            country_code: String,
            province_code: String
        },
        fulfillments: [String ],
        client_details: {
            browser_ip: String,
            accept_language: String,
            user_agent: String,
            session_hash: String,
            browser_width: Number,
            browser_height:Number
        },
        refunds: [String ],
        customer: {
            id: Number,
            email: String,
            accepts_marketing: Boolean,
            created_at: String,
            updated_at: String,
            first_name: String,
            last_name: String,
            orders_count: Number,
            state: String,
            total_spent: String,
            last_order_id: Number,
            note: String,
            verified_email: Boolean,
            multipass_identifier: String,
            tax_exempt: Boolean,
            phone: String,
            tags: String,
            last_order_name: String,
            default_address: {
                id: Number,
                customer_id: Number,
                first_name: String,
                last_name: String,
                company: String,
                address1: String,
                address2: String,
                city: String,
                province: String,
                country: String,
                zip: String,
                phone: String,
                name: String,
                province_code: String,
                country_code: String,
                country_name: String,
                default: Boolean
            }
        }

});
module.exports=mongoose.model("Ordersdb",ordersdbSchema);
